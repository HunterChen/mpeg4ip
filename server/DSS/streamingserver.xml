<?xml version ="1.0"?>
<!-- This is a sample /etc/streaming/streamingserver.xml file -->
<!-- The Document Type Definition (DTD) for the file -->
<!DOCTYPE CONFIGURATION [
<!ELEMENT CONFIGURATION (SERVER, MODULE*)>
<!ELEMENT SERVER (PREF|LIST-PREF)*>
<!ELEMENT MODULE (PREF|LIST-PREF)*>
<!ATTLIST MODULE
	NAME CDATA #REQUIRED>
<!ELEMENT PREF (#PCDATA)>
<!ATTLIST PREF
	NAME CDATA #REQUIRED
	TYPE (UInt8|SInt8|UInt16|SInt16|UInt32|SInt32|UInt64|SInt64|Float32|Float64|Bool16|Bool8|CharArray) "CharArray">
<!ELEMENT LIST-PREF (VALUE*)>
<!ELEMENT VALUE (#PCDATA)>
<!ATTLIST LIST-PREF
	NAME CDATA #REQUIRED
	TYPE  (UInt8|SInt8|UInt16|SInt16|UInt32|SInt32|UInt64|SInt64|Float32|Float64|Bool16|Bool8|CharArray) "CharArray">
]>
<CONFIGURATION>
<SERVER>

	<!-- Port(s) for accepting client connections -->
	<!-- NOTE: Add port 80 to the list of "rtsp_port"'s -->
	<!-- if you are streaming across the internet -->
	<!-- and want clients behind firewalls to be -->
	<!-- able to connect to the streaming server -->
	<LIST-PREF NAME="rtsp_port" TYPE="UInt16">
		<VALUE>7070</VALUE>
		<VALUE>554</VALUE>
</LIST-PREF>

	<!-- The text to display as the login entity "realm" by the client is defined by default_authorization_realm -->
	<!-- if the default realm is not defined here, then the default realm is set to "Streaming Server" -->
	<!-- the realm used in a response can also be dynamically set by authorizating modules -->
	<PREF NAME="default_authorization_realm">Streaming Server</PREF>

	<!-- when behind a round robin DNS, the client needs to be told the specific -->
	<!-- ip address of the matching handling its request. this pref tells the server -->
	<!-- to report its IP address in the reply to the HTTP GET request when -->
	<!-- tunneling RTSP through HTTP. -->
	<PREF NAME="do_report_http_connection_ip_address" TYPE="Bool16">disabled</PREF>

	<!-- "scaling factor" to appropriately scale the buffer size. -->
	<!-- Using the bitrate of the movie as a guide, the server will set the TCP send -->
	<!-- buffer to fit this number of seconds of data. -->
	<PREF NAME="tcp_seconds_to_buffer" TYPE="Float32">.33</PREF>

	<!-- Maximum size the send buffer can be set to. -->
	<PREF NAME="max_tcp_buffer_size" TYPE="UInt32">32768</PREF>

	<!-- Minimum size the send buffer can be set to. -->
	<PREF NAME="min_tcp_buffer_size" TYPE="UInt32">8192</PREF>

	<!-- Either "true" or "false". This toggles error -->
	<!-- logging on and off. -->
	<PREF NAME="error_logging" TYPE="Bool16">true</PREF>

	<!-- if screen_logging is true, all content for the error log will be -->
	<!-- written to the terminal window. Note that in order to see these messages -->
	<!-- onscreen, the server must be launched from the command-line, and must be -->
	<!-- launched in foreground mode (triggered by the addition of the -d flag). -->
	<PREF NAME="screen_logging" TYPE="Bool16">true</PREF>

	<!-- This controls how much information is to be -->
	<!-- logged in the error log. A value of 0 means only log fatal errors. 1  -->
	<!-- means log fatal errors and warnings. 2 means log fatal errors, warnings, -->
	<!-- and asserts. 3 means log fatal errors, warnings, asserts, and debug messages. -->
	<PREF NAME="error_logfile_verbosity" TYPE="UInt32">3</PREF>

	<!-- Maximum allowed size in bytes for the error log. A -->
	<!-- value of 0 means unlimited -->
	<PREF NAME="error_logfile_size" TYPE="UInt32">256000</PREF>

	<!-- Amount of time in days between rolls of the -->
	<!-- error log. A value of 0 means unlimited. -->
	<PREF NAME="error_logfile_interval" TYPE="UInt32">7</PREF>

	<!-- error log. A value of 0 means unlimited. -->
	<PREF NAME="error_logfile_dir">/Library/QuickTimeStreaming/Logs</PREF>

	<!-- Name of the error log file. -->
	<PREF NAME="error_logfile_name">Error</PREF>

	<!-- Path to the folder containing dynamic loadable server modules -->
	<PREF NAME="module_folder">/usr/sbin/StreamingServerModules</PREF>

	<!-- If the server discovers it is serving more than its -->
	<!-- allowed maximum bandwidth (using the average bandwidth computation) it -->
	<!-- will attempt to disconnect the most recently connected clients until the -->
	<!-- average bandwidth drops to acceptable levels. However, it will not -->
	<!-- disconnect clients if they've been connected for longer than this time, -->
	<!-- in seconds. If this value is set to 0, it will never disconnect clients. -->
	<PREF NAME="safe_play_duration" TYPE="UInt32">600</PREF>

	<!-- This is the interval in seconds between computations of the server's average bandwidth. -->
	<PREF NAME="average_bandwidth_update" TYPE="UInt32">60</PREF>

	<!-- The interval in seconds between updates of the -->
	<!-- server's total bytes and current bandwidth statistics. -->
	<PREF NAME="total_bytes_update" TYPE="UInt32">1</PREF>

	<!-- if this is true, the server will automatically restart itself if it crashes. -->
	<PREF NAME="auto_restart" TYPE="Bool16">true</PREF>

	<!-- If this is true, the server will stop when an assert condition is hit. -->
	<PREF NAME="break_on_assert" TYPE="Bool16">false</PREF>

	<!-- This tells the server what IP address it should accept -->
	<!-- client connections on. A value of 0 means all IP addresses currently -->
	<!-- enabled for the machine. -->
	<PREF NAME="bind_ip_addr">0</PREF>

	<!-- Path to the root folder for movies. -->
	<PREF NAME="movie_folder">/Library/QuickTimeStreaming/Movies</PREF>

	<!-- Maximum amount of bandwidth the server is allowed to serve. -->
	<!-- value is in kilobits/sec. While this limit is exceeded, new client requests. -->
	<!-- for additional streams will be responded to with the RTSP error 453, "Not Enough Bandwidth". -->
	<PREF NAME="maximum_bandwidth" TYPE="SInt32">102400</PREF>

	<!-- Maximum number of concurrent connections allowed by the server -->
	<PREF NAME="maximum_connections" TYPE="SInt32">1000</PREF>

	<!-- Amount of time in seconds the server will wait before -->
	<!-- disconnecting idle RTP clients. This timer is reset each time the server -->
	<!-- receives an RTCP status packet from the client. -->
	<PREF NAME="rtp_timeout" TYPE="UInt32">60</PREF>

	<!-- rtsp_timeout is the timeout that gets reported to the client. This is the actual timeout value -->
	<PREF NAME="real_rtsp_timeout" TYPE="UInt32">180</PREF>

	<!-- Amount of time in seconds the server will wait before -->
	<!-- disconnecting idle RTSP clients. This timer is reset each time the server -->
	<!-- receives a new RTSP request from the client. -->
	<PREF NAME="rtsp_timeout" TYPE="UInt32">0</PREF>

	<!-- Run as this user -->
	<PREF NAME="set_user_name"></PREF>

	<!-- Member of this group -->
	<PREF NAME="set_group_name"></PREF>

	<!-- If a packet is late by less than this number of msec, the server stops -->
	<!-- thinning. This applies to all stream transports, not just tcp. -->
	<!-- This is a default time, which can be overridden by the late-tolerance field of x-RTP-Options  -->
	<PREF NAME="tcp_min_thin_delay_tolerance" TYPE="SInt32">50</PREF>

	<!-- If a packet is late by this number of msec, the server enters -->
	<!-- a thinning mode. This applies to all stream transports, not just tcp. -->
	<!-- This is a default time, which can be overridden by the late-tolerance field of x-RTP-Options  -->
	<PREF NAME="tcp_max_thin_delay_tolerance" TYPE="SInt32">1000</PREF>

	<!-- Time in seconds server must wait before attempting to thick the client -->
	<!-- Even if conditions clear up -->
	<PREF NAME="tcp_thick_min_interval" TYPE="SInt32">15</PREF>

	<!-- If a video packet is late by this number of msec, the server drops it. -->
	<!-- This applies to all stream transports, not just tcp. -->
	<!-- This is a default time, which can be overridden by the late-tolerance field of x-RTP-Options  -->
	<PREF NAME="tcp_max_video_delay_tolerance" TYPE="SInt32">2500</PREF>

	<!-- If an audio packet is late by this number of msec, the server drops it. -->
	<!-- This applies to all stream transports, not just tcp. -->
	<!-- This is a default time, which can be overridden by the late-tolerance field of x-RTP-Options  -->
	<PREF NAME="tcp_max_audio_delay_tolerance" TYPE="SInt32">4000</PREF>

	<!-- If this is true, the server will add its source address to its transport. -->
	<!-- headers. This is necessary on certain networks where the source address -->
	<!-- is not necessarily known.  -->
	<PREF NAME="append_source_addr_in_transport" TYPE="Bool16">false</PREF>

	<!-- Reliable UDP: maximum interval between when a retransmit is supposed -->
	<!-- to be sent and when it actually gets sent. -->
	<!-- Lower values means smoother flow but slower server performance -->
	<PREF NAME="max_retransmit_delay" TYPE="UInt32">200</PREF>

	<!-- Reliable UDP: if the client doesn't explicitly say what its window is, -->
	<!-- the server will use this as a default value. In K bytes -->
	<PREF NAME="default_window_size" TYPE="UInt32">60</PREF>

	<!-- Reliable UDP: For debugging only. This turns on massive -->
	<!-- server logging of reliable udp acking -->
	<PREF NAME="ack_logging_enabled" TYPE="Bool16">false</PREF>

	<!-- Reliable UDP: Time in msec between server checks for incoming RTCP packets. -->
	<!-- Longer interval means better server performance but grosser -->
	<!-- mis-estimates of packet round-trip-times -->
	<PREF NAME="rtcp_poll_interval" TYPE="UInt32">100</PREF>

	<!-- Reliable UDP: Size in Kbytes for the RTCP UDP socket receive buffers. -->
	<!-- This in general needs to be big to absorb bursts of RTCP ACKs. -->
	<!-- Lower value may mean ACKs will get dumped by the kernel. -->
	<PREF NAME="rtcp_rcv_buf_size" TYPE="UInt32">128</PREF>

	<!-- Reliable UDP: Is Reliable UDP slow start enabled. Having this off may lead to an initial -->
	<!-- burst of packet loss due to mis-estimate of the client's available bandwidth. Having it -->
	<!-- on may lead to premature thinning. -->
	<PREF NAME="reliable_udp_slow_start" TYPE="Bool16">true</PREF>

	<!-- Reliable UDP: Is Reliable UDP enabled.  -->
	<PREF NAME="reliable_udp_enabled" TYPE="Bool16">true</PREF>

	<!-- Maximum time the server can overbuffer (send data ahead of time) to the -->
	<!-- client if it is using a reliable transport.  In seconds. -->
	<PREF NAME="max_overbuffer_time" TYPE="UInt32">6</PREF>

	<!-- % of packets for server to drop internally. Debugging only -->
	<PREF NAME="rtp_packet_drop_pct" TYPE="UInt32">0</PREF>

</SERVER>
<MODULE NAME="QTSSAccessLogModule">
	<!-- Amount of time in days between rolls of the  -->
	<!-- access log. A value of 0 means unlimited. -->
	<PREF NAME="request_logfile_interval" TYPE="UInt32">7</PREF>

	<!-- Maximum allowed size in bytes for the access log. A -->
	<!-- value of 0 means unlimited. -->
	<PREF NAME="request_logfile_size" TYPE="UInt32">10240000</PREF>

	<!-- Path to directory where access logs are stored. -->
	<PREF NAME="request_logfile_dir">/Library/QuickTimeStreaming/Logs</PREF>

	<!-- Name of the access log file. -->
	<PREF NAME="request_logfile_name">StreamingServer</PREF>

	<!-- Either "true" or "false". This toggles access. -->
	<!-- logging on and off. -->
	<PREF NAME="request_logging" TYPE="Bool16">false</PREF>

</MODULE>
<MODULE NAME="QTSSSvrControlModule">
	<!-- This sets how often in seconds the server will -->
	<!-- update its activity histogram (used by RTSPServerControlModule on MacOSX) -->
	<PREF NAME="history_update_interval" TYPE="UInt32">120</PREF>

</MODULE>
<MODULE NAME="QTSSFileModule">
	<!-- This is the farthest ahead of time in milliseconds -->
	<!-- the server will send an RTP packet. Setting this value higher improves -->
	<!-- the performance and scalability of the server, at the expense of -->
	<!-- increasing its burstiness. -->
	<PREF NAME="max_advance_send_time" TYPE="UInt32">100</PREF>

	<!-- The server will attempt to buffer this many seconds of file data at a time. -->
	<PREF NAME="buffer_seconds" TYPE="UInt32">8</PREF>

	<!-- This URL will be included in the dynamically generated SDP -->
	<!-- returned to the client. Typically, this should be set to your default web URL. -->
	<PREF NAME="sdp_url"></PREF>

	<!-- This email address will be included in the dynamically -->
	<!-- generated SDP returned to the client. -->
	<PREF NAME="admin_email"></PREF>
	
    <PREF NAME="max_allowed_speed" TYPE="Float32">4.000000</PREF>
    <PREF NAME="flow_control_probe_interval" TYPE="UInt32">50</PREF>

</MODULE>
<MODULE NAME="QTSSWebStatsModule">
	<!-- This sets the URL for the server's web stats page. If this -->
	<!-- is set to "stats" for instance, if you request: -->
	<!-- http://my.server.com:554/stats in a web browser, the server will respond -->
	<!-- with current status information. -->
	<PREF NAME="web_stats_url"></PREF>

</MODULE>
<MODULE NAME="QTSSHttpFileModule">
	<!-- Path to the http download folder. All files -->
	<!-- that are requested from this folder are sent via HTTP -->
	<PREF NAME="http_folder">/usr/movies/http</PREF>
	<!-- Either "true" or "false". This toggles http module -->
	<!-- logging on and off. -->
	<PREF NAME="http_logging" TYPE="Bool16">true</PREF>
	<!-- Name of the http module log file. -->
	<PREF NAME="http_logfile_name">Http</PREF>
	<!-- Path to directory where http module logs are stored. -->
	<PREF NAME="http_logfile_dir">/Library/QuickTimeStreaming/Logs</PREF>
	<!-- Maximum allowed size in bytes for the http module log. A -->
	<!-- value of 0 means unlimited. -->
	<PREF NAME="http_logfile_size" TYPE="UInt32">256000</PREF>
	<!-- Amount of time in days between rolls of the  -->
	<!-- http module log. A value of 0 means unlimited. -->
	<PREF NAME="http_logfile_interval" TYPE="UInt32">7</PREF>
	
</MODULE>
<MODULE NAME="QTSSSpamDefenseModule">
	<!-- Default value for number of connections per IP address. This is used by SpamDefenseModule. -->
	<!-- Spam defense module will deny more than this number of clients from a single IP address -->
	<!-- NOTE: This setting takes effect only when the QTSSSpamDefenseModule is installed. -->
	<PREF NAME="num_conns_per_ip_addr" TYPE="UInt32">100</PREF>

</MODULE>
<MODULE NAME="QTSSReflectorModule">
	<!-- The reflector imposes time delays between groups,  -->
	<!-- or "buckets" of clients for a given multicast. This value is the number -->
	<!-- of clients to put in one bucket. -->
	<PREF NAME="reflector_bucket_size" TYPE="UInt32">16</PREF>

	<!-- This value is the number of milliseconds to delay each bucket of clients. -->
	<PREF NAME="reflector_delay" TYPE="UInt32">100</PREF>

	<!-- This tells the reflector whether it should append a '.sdp' to the end -->
	<!-- of URLs when looking for a .sdp file -->
	<PREF NAME="allow_non_sdp_urls" TYPE="Bool16">true</PREF>

</MODULE>
<MODULE NAME="QTSSFlowControlModule">
	<!-- If a client reports loss percentages greater than loss_thin_tolerance, -->
	<!-- over the course of num_losses_to_thin consecutive RTCP (status) packets, the -->
	<!-- server will drop the bitrate of stream. -->
	<PREF NAME="loss_thin_tolerance" TYPE="UInt32">30</PREF>

	<PREF NAME="num_losses_to_thin" TYPE="UInt32">3</PREF>

	<!-- If a client reports loss percentages less than loss_thick_tolerance, over -->
	<!-- the course of num_losses_to_thick consecutive RTCP (status) packets, the -->
	<!-- server will increase the bitrate of the stream. -->
	<PREF NAME="loss_thick_tolerance" TYPE="UInt32">5</PREF>

	<PREF NAME="num_losses_to_thick" TYPE="UInt32">6</PREF>

	<!-- After this number of RTCP packets where the client is reporting degrading quality, -->
	<!-- the server will drop the bitrate of the stream -->
	<PREF NAME="num_worses_to_thin" TYPE="UInt32">2</PREF>

</MODULE>
<MODULE NAME="QTSSRelayModule">
	<!-- Relay preferences file. This file should be in the documented .rcf (Relay config file) -->
	<!-- format. The Relay will use this to load up all relay streams -->
	<PREF NAME="relay_prefs_file">/etc/streaming/streamingrelay.conf</PREF>

</MODULE>
<MODULE NAME="QTSSAccessModule">
	<!-- The file name for the AccessModule's access file as it appears in controlled directories. -->
	<PREF NAME="modAccess_qtaccessfilename">qtaccess</PREF>

	<!-- The default path and file name for the AccessModule's groups list -->
	<PREF NAME="modAccess_groupsfilepath">/etc/streaming/qtgroups</PREF>

	<!-- The default path and file name for the AccessModule's user list -->
	<PREF NAME="modAccess_usersfilepath">/etc/streaming/qtusers</PREF>

</MODULE>
<MODULE NAME="QTSSAdminModule">
	<PREF NAME="RequestTimeIntervalMilli" TYPE="UInt32">50</PREF>
	<PREF NAME="LocalAccessOnly" TYPE="Bool16">true</PREF>
	<PREF NAME="Authenticate" TYPE="Bool16">true</PREF>
	<PREF NAME="AdministratorPassword">default</PREF>
</MODULE>
</CONFIGURATION>
